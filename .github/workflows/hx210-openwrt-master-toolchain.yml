#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: hx210/openwrt Toolchain Build
on:
  workflow_dispatch:
  schedule:
    - cron: 0 20 */14 * *
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: master
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        PLATFORM: [bcm27xx/bcm2711, x86/generic, ramips/mt7621]
    #        PLATFORM: [bcm27xx/bcm2708, bcm27xx/bcm2709, bcm27xx/bcm2710, bcm27xx/bcm2711, ipq40xx/generic, rockchip/armv8, x86/64, x86/generic]
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

      - name: Clone Source Code
        id: clone
        run: |
          df -hT $PWD
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
          export REPO_USER="$(echo $REPO_URL | awk -F '/' '{print $(NF-1)}')"
          echo "REPO_USER=$REPO_USER" >> $GITHUB_ENV
          export REPO_NAME="$(echo $REPO_URL | awk -F '/' '{print $(NF)}')"
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      - name: Install Feeds
        id: feeds
        run: |
          cd openwrt
          echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV
          ./scripts/feeds update -a 
          ./scripts/feeds install -a

      - name: Download Packages
        env:
          PLATFORM: ${{ matrix.PLATFORM }}
        id: download
        run: |
          mv config/$PLATFORM.config $OPENWRTROOT/.config
          cd $OPENWRTROOT
          bash $GITHUB_WORKSPACE/tools.sh
          make defconfig
          make download -j16
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile Tools
        id: tools
        run: |
          cd $OPENWRTROOT
          echo -e "$(nproc) thread compile"
          make tools/compile -j$(nproc) || make tools/compile -j1 V=s

      - name: Compile Toolchain
        id: toolchain
        run: |
          cd $OPENWRTROOT
          echo -e "$(nproc) thread compile"
          make toolchain/compile -j$(nproc) || make toolchain/compile -j1 V=s
          make diffconfig
          cd $OPENWRTROOT/bin/targets/*
          TARGET=$(basename `pwd`)
          echo "TARGET=$TARGET" >> $GITHUB_ENV
          cd *
          rm *
          SUBTARGET=$(basename `pwd`)
          echo "SUBTARGET=$SUBTARGET" >> $GITHUB_ENV

      - name: Clean Files
        id: clean
        run: |
          cd $OPENWRTROOT
          make clean
          rm -rf tmp logs .config* dl
          ./scripts/feeds clean

      - name: Generate Toolchain Image
        id: generate
        run: |
          export FILE_NAME="toolchain-image-$REPO_USER-$REPO_NAME-$REPO_BRANCH-$TARGET-$SUBTARGET.img"
          mksquashfs openwrt $FILE_NAME -force-gid 1001 -force-uid 1001 -comp xz
          mkdir output
          mv $FILE_NAME output
          echo "::set-output name=RELEASE_TAG::$REPO_USER-$REPO_NAME-$REPO_BRANCH"
          df -hT $PWD

      - name: Upload Image To Release
        id: create_release
        uses: ncipollo/release-action@v1 #https://github.com/ncipollo/release-action/tree/main
        with:
          name: ${{ steps.generate.outputs.RELEASE_TAG }}
          allowUpdates: true
          tag: openwrt-openwrt-master
          commit: main
          replacesArtifacts: true
          token: ${{ secrets.WORKFLOW_TOKEN }}
          artifacts: output/*


  Upload:
    needs: [Build]
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Show system
        run: |
          echo -e "Total CPU cores\t: $(nproc)"
          cat /proc/cpuinfo | grep 'model name'
          free -h
          uname -a
          [ -f /proc/version ] && cat /proc/version
          [ -f /etc/issue.net ] && cat /etc/issue.net
          [ -f /etc/issue ] && cat /etc/issue
          ulimit -a

      - name: 电报机器人信息通知
        run: |
          curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=我亲爱的✨主人✨：您的固件开始编译！💐https://github.com/hx210/Openwrt-R -工具链 #工具链" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_TOKEN }}
          repository: hx210/Openwrt-R
          event-type: Source Code Update
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
